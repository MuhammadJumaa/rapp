{"version":3,"sources":["layout/Navbar.js","context.js","components/User.js","components/Users.js","forms/AddUser.js","forms/UpdateUser.js","pages/NotFound.js","pages/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","title","className","href","to","defaultProps","UserContext","React","createContext","reducer","state","action","type","users","filter","user","payload","id","map","UserProvider","dispatch","setState","componentDidMount","a","async","axios","get","response","data","Provider","value","this","props","children","Component","UserConsumer","Consumer","User","cardHeader","e","isVisible","onDeleteUser","delete","onClickEvet","bind","console","log","name","department","salary","style","backgroundColor","color","onClick","cursor","test","Users","key","Animation","posed","div","visible","opacity","applyAtStart","display","hidden","AddUser","error","changeVisibility","validateForm","changeInput","target","addUser","preventDefault","newUser","post","history","push","pose","onSubmit","htmlFor","onChange","placeholder","UpdateUser","match","params","updateUser","updatedUser","put","NotFound","Contact","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfaf3e16.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Navbar({title}) {\r\n    return(\r\n        <nav className=\"navbar-nav navbar-expand-lg navbar-dark bg-dark bg-dark mb-3 p-3\">\r\n            <a href=\"/\" className=\"navbar-brand\">{title}</a>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item active\">\r\n                    <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                </li>\r\n                <li className=\"nav-item active\">\r\n                    <Link to=\"/add\" className=\"nav-link\">Add User</Link>\r\n                </li>\r\n                <li className=\"nav-item active\">\r\n                    <Link to=\"/contact\" className=\"nav-link\">Contact</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title : \"React App\"\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst UserContext = React.createContext();\r\n//provider -> sağlayıcı , consumer -> tüketici\r\nconst reducer = (state,action) => {\r\n  switch(action.type){\r\n    case \"DELETE_USER\":\r\n      return {\r\n        ...state,\r\n        users:state.users.filter(user => action.payload !== user.id)\r\n      }\r\n      case \"ADD_USER\":\r\n        return {\r\n          ...state,\r\n          users : [...state.users,action.payload]\r\n        }\r\n      case \"UPDATE_USER\":\r\n        return {\r\n          ...state,\r\n          users : state.users.map(user => user.id === action.payload.id ? action.payload : user)\r\n      }\r\n      default:\r\n        return state\r\n  }\r\n}\r\nexport class UserProvider extends Component {\r\n    state = {\r\n        users:[],\r\n        dispatch : action => {\r\n          this.setState(state => reducer(state,action))\r\n        }\r\n      }\r\n    componentDidMount = async () => {\r\n      const response = await axios.get(\"http://localhost:3004/users\");\r\n      this.setState({\r\n        users:response.data\r\n      })\r\n    }\r\n    render() {\r\n        return (\r\n            <UserContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </UserContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst UserConsumer = UserContext.Consumer;\r\n\r\nexport default UserConsumer;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport UserConsumer from \"../context\";\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class User extends Component {\r\n  onClickEvet() {\r\n    console.log(this);\r\n  }\r\n  myfunction() {\r\n    console.log(\"selam\");\r\n  }\r\n  cardHeader = e => {\r\n    this.setState({\r\n      isVisible: !this.state.isVisible\r\n    });\r\n  };\r\n  onDeleteUser = async(dispatch,e) => {\r\n    const {id} = this.props;\r\n    //Delete Request\r\n    await axios.delete(`http://localhost:3004/users/${id}`);\r\n    //Consumer dispatch\r\n    dispatch({type: \"DELETE_USER\",payload:id});\r\n  }\r\n  componentWillUnmount(){\r\n    console.log(\"Component Will Unmount\");\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isVisible: true\r\n    };\r\n    this.onClickEvet = this.onClickEvet.bind(this);\r\n  }\r\n  render() {\r\n    const { id,name, department, salary } = this.props;\r\n    const { isVisible } = this.state;\r\n\r\n    return(\r\n      <UserConsumer>\r\n        {\r\n          value => {\r\n            const {dispatch} = value;\r\n            return (\r\n              <div className=\"col-md-8 mb-4\">\r\n                <div className=\"card\" style = { isVisible ? {backgroundColor:\"#62848d\",color:\"white\"} : null}>\r\n                  <div className=\"card-header d-flex justify-content-between\" onClick={this.cardHeader}>\r\n                    <h4 className=\"d-inline\" onClick={this.onClickEvet}>\r\n                      {name}\r\n                    </h4>\r\n                    <i onClick={this.onDeleteUser.bind(this,dispatch)} className=\"far fa-trash-alt\" style={{ cursor: \"pointer\" }}></i>\r\n                  </div>\r\n                  {\r\n                  isVisible ? (\r\n                    <div className=\"card-body\">\r\n                      <p className=\"card-text\">Maaş : {salary}</p>\r\n                      <p className=\"card-text\">Department : {department}</p>\r\n                      <Link to={`edit/${id}`} className=\"btn btn-dark btn-block\">Update User</Link>\r\n                      <p>{this.state.test}</p>\r\n                    </div>\r\n                  ) : null\r\n                  }\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n      </UserConsumer>\r\n    )\r\n\r\n    \r\n\r\n\r\n  }\r\n}\r\n\r\nUser.defaultProps = {\r\n  name: \"isimsiz\",\r\n  salary: \"parasız\",\r\n  department: \"departmansız\"\r\n};\r\n\r\nUser.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  salary: PropTypes.string.isRequired,\r\n  department: PropTypes.string.isRequired,\r\n  id : PropTypes.string.isRequired\r\n};\r\n","import React, { Component } from 'react'\r\nimport User from './User';\r\nimport UserConsumer from '../context';\r\n\r\nclass Users extends Component {\r\n    render() {\r\n        return (\r\n            <UserConsumer>\r\n            {\r\n                value =>  {\r\n                const {users} = value;\r\n                    return (\r\n                        <div>\r\n                            {\r\n                                users.map(user => {\r\n                                    return(\r\n                                        <User \r\n                                            key = {user.id}\r\n                                            id = {user.id}\r\n                                            name = {user.name}\r\n                                            salary = {user.salary}\r\n                                            department = {user.department}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    )\r\n                }     \r\n            }\r\n            </UserConsumer>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Users;\r\n","import React, { Component } from 'react'\r\nimport posed from 'react-pose'\r\nimport UserConsumer from \"../context\"\r\nimport axios from 'axios'\r\n\r\nconst Animation = posed.div({\r\n    visible : {\r\n        opacity:1,\r\n        applyAtStart:{\r\n            display: \"block\"\r\n        }\r\n    },\r\n    hidden : {\r\n        opacity:0,\r\n        applyAtStart: {\r\n            display:\"none\"\r\n        }\r\n    }\r\n})\r\nclass AddUser extends Component {\r\n    state = {\r\n        visible : false,\r\n        name : \"\",\r\n        department : \"\",\r\n        salary : \"\",\r\n        error : false\r\n    }\r\n    changeVisibility = (e) => {\r\n        this.setState({\r\n            visible : !this.state.visible\r\n        })\r\n    }\r\n    validateForm = () => {\r\n        const {name,salary,department} = this.state;\r\n        if(name === \"\" || salary === \"\" || department === \"\"){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    changeInput = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value,\r\n            [e.target.department] : e.target.value,\r\n            [e.target.salary] : e.target.value\r\n        })\r\n    }\r\n    addUser = async (dispatch,e) => {\r\n      e.preventDefault();\r\n      const {name,department,salary} = this.state;\r\n      const newUser = {\r\n          name:name,\r\n          department:department,\r\n          salary:salary\r\n      }\r\n      if(!this.validateForm()){\r\n        this.setState({\r\n            error:true\r\n        })\r\n        return;\r\n      }\r\n      const response = await axios.post(\"http://localhost:3004/users\",newUser);\r\n      dispatch({type:\"ADD_USER\",payload:response.data});\r\n\r\n      //redirect\r\n      this.props.history.push(\"/\");\r\n    }\r\n    render() {\r\n        const {visible,name,department,salary,error} = this.state;\r\n        return <UserConsumer>\r\n            {\r\n                value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"col-md-8 mb-4\">\r\n                            <button onClick={this.changeVisibility} className=\"btn btn-dark btn-block mb-2\">{visible ? \"Hide Form\" : \"Show Form\"}</button>\r\n                            <Animation pose = {visible ? \"visible\" : \"hidden\"}>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h4>Add User Form</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    {\r\n                                        error ? \r\n                                        <div className=\"alert alert-danger\">\r\n                                            Lütfen Bilgilerinizi Kontrol Edin.\r\n                                        </div>\r\n                                        : null\r\n                                    }\r\n                                    <form className=\"text-left\" onSubmit={this.addUser.bind(this,dispatch)}>\r\n                                        <div className=\"selam\"></div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Name</label>\r\n                                            <input type=\"text\" onChange={this.changeInput} value={name} name=\"name\" id=\"name\" placeholder=\"Name\" className=\"form-control\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"department\">Department</label>\r\n                                            <input type=\"text\" onChange={this.changeInput} value={department} name=\"department\" id=\"department\" placeholder=\"Department\" className=\"form-control\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"salary\">Salary</label>\r\n                                            <input type=\"text\" onChange={this.changeInput} value={salary} name=\"salary\" id=\"salary\" placeholder=\"Salary\" className=\"form-control\" />\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-danger btn-block\">Add User</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            </Animation>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </UserConsumer>\r\n    }\r\n}\r\nexport default AddUser;","import React, { Component } from 'react'\r\nimport UserConsumer from \"../context\"\r\nimport axios from 'axios';\r\n\r\nclass UpdateUser extends Component {\r\n    state = {\r\n        name : \"\",\r\n        department : \"\",\r\n        salary : \"\"\r\n    }\r\n    changeInput = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value,\r\n            [e.target.department] : e.target.value,\r\n            [e.target.salary] : e.target.value\r\n        })\r\n    }\r\n    componentDidMount = async () => {\r\n        const {id} = this.props.match.params;\r\n        const response = await axios.get(`http://localhost:3004/users/${id}`)\r\n        const {name,salary,department} = response.data;\r\n        this.setState({\r\n            name,\r\n            salary,\r\n            department\r\n        });\r\n    }\r\n    validateForm = () => {\r\n        const {name,salary,department} = this.state;\r\n        if(name === \"\" || salary === \"\" || department === \"\"){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    updateUser = async (dispatch,e) => {\r\n        e.preventDefault();\r\n        const {name,salary,department} = this.state;\r\n        const {id} = this.props.match.params;\r\n        const updatedUser = {\r\n            name,\r\n            salary,\r\n            department\r\n        };\r\n        if(!this.validateForm()){\r\n            this.setState({\r\n                error:true\r\n            })\r\n            return;\r\n          }\r\n        const response = await axios.put(`http://localhost:3004/users/${id}`, updatedUser)\r\n        dispatch({type:\"UPDATE_USER\",payload:response.data});\r\n        //redirect\r\n        this.props.history.push(\"/\");\r\n    }\r\n    \r\n    render() {\r\n        const {name,department,salary,error} = this.state;\r\n        return <UserConsumer>\r\n            {\r\n                value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"col-md-8 mb-4\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h4>Update User Form</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    {\r\n                                        error ? \r\n                                        <div className=\"alert alert-danger\">\r\n                                            Lütfen Bilgilerinizi Kontrol Edin.\r\n                                        </div>\r\n                                        : null\r\n                                    }\r\n                                    <form className=\"text-left\" onSubmit={this.updateUser.bind(this,dispatch)}>\r\n                                        <div className=\"selam\"></div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"name\">Name</label>\r\n                                            <input type=\"text\" onChange={this.changeInput} value={name} name=\"name\" id=\"name\" placeholder=\"Name\" className=\"form-control\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"department\">Department</label>\r\n                                            <input type=\"text\" onChange={this.changeInput} value={department} name=\"department\" id=\"department\" placeholder=\"Department\" className=\"form-control\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"salary\">Salary</label>\r\n                                            <input type=\"text\" onChange={this.changeInput} value={salary} name=\"salary\" id=\"salary\" placeholder=\"Salary\" className=\"form-control\" />\r\n                                        </div>\r\n                                        <button type=\"submit\" className=\"btn btn-danger btn-block\">Update User</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        </UserConsumer>\r\n    }\r\n}\r\nexport default UpdateUser;","import React from 'react'\r\n\r\nfunction NotFound() {\r\n    return(\r\n        <div>\r\n            <h6>404</h6>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react'\r\n\r\nfunction Contact() {\r\n    return(\r\n        <div>\r\n            <h3>Contact</h3>\r\n            <p>contact info</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Navbar from './layout/Navbar';\r\nimport Users from './components/Users';\r\nimport AddUser from './forms/AddUser';\r\nimport UpdateUser from './forms/UpdateUser';\r\nimport NotFound from './pages/NotFound';\r\nimport Contact from './pages/Contact';\r\nimport {BrowserRouter as Router,Route,Switch} from \"react-router-dom\";\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n  render(){\r\n    return(\r\n      <Router>\r\n        <div className=\"container\">\r\n          <div className=\"App\">\r\n            <Navbar/>\r\n            <hr/>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Users} />\r\n              <Route exact path=\"/add\" component={AddUser} />\r\n              <Route exact path=\"/contact\" component={Contact} />\r\n              <Route exact path=\"/edit/:id\" component={UpdateUser} />\r\n              <Route component = {NotFound} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>  \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {UserProvider} from './context';\n\nReactDOM.render(\n    <UserProvider>\n        <App/>\n    </UserProvider>\n    , \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}